<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Restful HTTP API 设计规范</title>
      <link href="2021/07/09/restful/"/>
      <url>2021/07/09/restful/</url>
      
        <content type="html"><![CDATA[<h1 id="What’s-RESTful"><a href="#What’s-RESTful" class="headerlink" title="What’s RESTful"></a>What’s RESTful</h1><p>RESTful 是一种软件设计风格，由 <a href="https://roy.gbiv.com/">Roy Fielding</a> 在他的 论文 中提出，全称为 Representational State Transfer，直译为表现层状态转移</p><h1 id="使用RESTful的优势"><a href="#使用RESTful的优势" class="headerlink" title="使用RESTful的优势"></a>使用RESTful的优势</h1><ul><li>安全可靠，高效，易扩展。</li><li>简单明了，可读性强，没有歧义。</li><li>API 风格统一，调用规则，传入参数和返回数据有统一的标准</li></ul><h1 id="设计规范"><a href="#设计规范" class="headerlink" title="设计规范"></a>设计规范</h1><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><ol><li>域名应尽量使用https协议,可使用<a href="https://certbot.eff.org/">certbot</a>制作免费https证书,后面研究一下</li><li>api应与主域名区分开,使用专用域名(.eg: <code>https://api.alon.wang</code>)或者放在主域名下(eg:<code>https://alon.wang/api</code>)</li></ol><h2 id="版本迭代"><a href="#版本迭代" class="headerlink" title="版本迭代"></a>版本迭代</h2><p>随业务的发展,api大概率会发生迭代,为了保证新老用户的使用,应控制好版本.<br>实现方法</p><ul><li>版本号加入URL中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;alon.wang&#x2F;api&#x2F;v1</span><br><span class="line">https:&#x2F;&#x2F;alon.wang&#x2F;api&#x2F;v2</span><br></pre></td></tr></table></figure><ul><li>使用HTTP请求头的Accept来进行区分</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;alon.wang&#x2F;api&#x2F;</span><br><span class="line">    Accept: application&#x2F;prs.alon.v1+json</span><br><span class="line">    Accept: application&#x2F;prs.alon.v2+json</span><br></pre></td></tr></table></figure><p>后端具体实现可以参考<a href="https://learnku.com/laravel/t/10579/do-api-multi-version-compatibility-through-the-version-field-in-header">zedisdog的实现思路</a></p><blockquote><p>推荐使用第二种,前端可以不需要修改url</p></blockquote><h2 id="url编写"><a href="#url编写" class="headerlink" title="url编写"></a>url编写</h2><p>RESTful的设计中,所有东西都看作资源,而每一个资源都应该是一个名词,且尽量应为复数(也可以为单数,比如github中项目的issue锁,一个问题只有一个锁,所以此时锁为单数),URL设计中,应避免动词出现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;issues                                      列出所有的 issue</span><br><span class="line">GET &#x2F;orgs&#x2F;:org&#x2F;issues                            列出某个项目的 issue</span><br><span class="line">GET &#x2F;repos&#x2F;:owner&#x2F;:repo&#x2F;issues&#x2F;:number           获取某个项目的某个 issue</span><br><span class="line">POST &#x2F;repos&#x2F;:owner&#x2F;:repo&#x2F;issues                  为某个项目创建 issue</span><br><span class="line">PATCH &#x2F;repos&#x2F;:owner&#x2F;:repo&#x2F;issues&#x2F;:number         修改某个 issue</span><br><span class="line">PUT &#x2F;repos&#x2F;:owner&#x2F;:repo&#x2F;issues&#x2F;:number&#x2F;lock      锁住某个 issue</span><br><span class="line">DELETE &#x2F;repos&#x2F;:owner&#x2F;:repo&#x2F;issues&#x2F;:number&#x2F;lock   解锁某个 issue</span><br></pre></td></tr></table></figure><blockquote><p>GET:获取资源<br>POST:新建资源<br>PUT:更新整个资源的属性,应提供资源的所有属性过来更新<br>PATCH:更新资源的部分属性,不需要提供资源的所有属性<br>DELETE:删除某个属性</p></blockquote><h2 id="响应码"><a href="#响应码" class="headerlink" title="响应码"></a>响应码</h2><p>根据不同的响应,我们应该使用不同的状态码,使响应的数据更加规范与可读</p><table><thead><tr><th align="left">响应码</th><th align="left">注释</th></tr></thead><tbody><tr><td align="left">200</td><td align="left">OK - 对成功的 GET、PUT、PATCH 或 DELETE 操作进行响应。也可以被用在不创建新资源的 POST 操作上</td></tr><tr><td align="left">201</td><td align="left">Created - 对创建新资源的 POST 操作进行响应。应该带着指向新资源地址的 Location 头</td></tr><tr><td align="left">202</td><td align="left">Accepted - 服务器接受了请求，但是还未处理，响应中应该包含相应的指示信息，告诉客户端该去哪里查询关于本次请求的信息</td></tr><tr><td align="left">204</td><td align="left">No Content - 对不会返回响应体的成功请求进行响应（比如 DELETE 请求）</td></tr><tr><td align="left">304</td><td align="left">Not Modified - HTTP 缓存 header 生效的时候用</td></tr><tr><td align="left">400</td><td align="left">Bad Request - 请求异常，比如请求中的 body 无法解析</td></tr><tr><td align="left">401</td><td align="left">Unauthorized - 没有进行认证或者认证非法</td></tr><tr><td align="left">403</td><td align="left">Forbidden - 服务器已经理解请求，但是拒绝执行它</td></tr><tr><td align="left">404</td><td align="left">Not Found - 请求一个不存在的资源</td></tr><tr><td align="left">405</td><td align="left">Method Not Allowed - 所请求的 HTTP 方法不允许当前认证用户访问</td></tr><tr><td align="left">410</td><td align="left">Gone - 表示当前请求的资源不再可用。当调用老版本 API 的时候很有用</td></tr><tr><td align="left">415</td><td align="left">Unsupported Media Type - 如果请求中的内容类型是错误的</td></tr><tr><td align="left">422</td><td align="left">Unprocessable Entity - 用来表示校验错误</td></tr><tr><td align="left">429</td><td align="left">Too Many Requests - 由于请求频次达到上限而被拒绝访问</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel-permission权限管理的使用</title>
      <link href="2021/06/05/laravel-permission/"/>
      <url>2021/06/05/laravel-permission/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="安装composer包"><a href="#安装composer包" class="headerlink" title="安装composer包"></a>安装composer包</h2><p><code>composer require spatie/laravel-permission</code></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li>生成迁移文件<br>  <code>php artisan vendor:publish --provider=&quot;Spatie\Permission\PermissionServiceProvider&quot; --tag=&quot;migrations&quot;</code></li><li>运行迁移命令<br>  <code>php artisan migrate</code></li><li>生成配置文件<br>  <code>php artisan vendor:publish --provider=&quot;Spatie\Permission\PermissionServiceProvider&quot; --tag=&quot;config&quot;</code></li></ul><ul><li><p>用户模型需使<code>Spatie\Permission\Traits\HasRoles</code>,如果使用了其他guard,还需设置<code>guard_name</code>属性</p></li><li><p>如果要扩展Role和Permission模型,需要继承扩展包的<br><code>Spatie\Permission\Models\Role</code>和<code>Spatie\Permission\Models\Permission</code>,并在 项目根目录/config/permission.php 文件中,修改对应的模型</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Factories</span>\<span class="title">HasFactory</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Auth</span>\<span class="title">User</span> <span class="title">as</span> <span class="title">Authenticatable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Notifications</span>\<span class="title">Notifiable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Spatie</span>\<span class="title">Permission</span>\<span class="title">Traits</span>\<span class="title">HasRoles</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Admin</span> <span class="keyword">extends</span> <span class="title">Authenticatable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">HasFactory</span>, <span class="title">Notifiable</span>,<span class="title">HasRoles</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$table</span> = <span class="string">&#x27;admins&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The attributes that are mass assignable.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$fillable</span> = [</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;phone&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The attributes that should be hidden for arrays.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$hidden</span> = [</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;remember_token&#x27;</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The attributes that should be cast to native types.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$casts</span> = [</span><br><span class="line">        <span class="string">&#x27;email_verified_at&#x27;</span> =&gt; <span class="string">&#x27;datetime&#x27;</span>,</span><br><span class="line">    ];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//设置guard为jwt</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$guard_name</span> = <span class="string">&#x27;jwt&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">Admin</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Spatie</span>\<span class="title">Permission</span>\<span class="title">Models</span>\<span class="title">Role</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Spatie</span>\<span class="title">Permission</span>\<span class="title">Models</span>\<span class="title">Permission</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建权限</span></span><br><span class="line">Permission::create(<span class="string">&#x27;admin.index&#x27;</span>);</span><br><span class="line">Permission::findOrCreate(<span class="string">&#x27;admin.update&#x27;</span>);</span><br><span class="line"><span class="comment">//创建角色</span></span><br><span class="line"><span class="variable">$role</span> = Role::create([<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;测试管理员&#x27;</span>]);</span><br><span class="line"><span class="comment">//给角色添加权限</span></span><br><span class="line"><span class="variable">$role</span>-&gt;givePermissionTo(<span class="string">&#x27;admin.index&#x27;</span>,<span class="string">&#x27;admin.update&#x27;</span>);</span><br><span class="line"><span class="comment">//给角色同步权限(用数组中的权限替换用户的权限)</span></span><br><span class="line"><span class="variable">$role</span>-&gt;syncPermissions([<span class="string">&#x27;admin.index&#x27;</span>,<span class="string">&#x27;admin.store&#x27;</span>]);</span><br><span class="line"><span class="comment">//给角色删除权限</span></span><br><span class="line"><span class="variable">$role</span>-&gt;revokePermissionTo(<span class="string">&#x27;admin.index&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 用户直接管理权限</span></span><br><span class="line"><span class="comment"> * 该扩展支持不通过角色,直接给用户分配权限</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$admin</span> = <span class="keyword">new</span> Admin();</span><br><span class="line"><span class="comment">//给用户添加权限</span></span><br><span class="line"><span class="variable">$admin</span>-&gt;givePermissionTo(<span class="string">&#x27;admin.index&#x27;</span>,<span class="string">&#x27;admin.update&#x27;</span>);</span><br><span class="line"><span class="variable">$admin</span>-&gt;givePermissionTo([<span class="string">&#x27;admin.index&#x27;</span>,<span class="string">&#x27;admin.update&#x27;</span>]);</span><br><span class="line"><span class="comment">//给用户同步权限</span></span><br><span class="line"><span class="variable">$admin</span>-&gt;syncPermissions([<span class="string">&#x27;admin.index&#x27;</span>,<span class="string">&#x27;admin.store&#x27;</span>]);</span><br><span class="line"><span class="comment">//给用户删除权限</span></span><br><span class="line"><span class="variable">$admin</span>-&gt;revokePermissionTo(<span class="string">&#x27;edit&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//给用户添加角色</span></span><br><span class="line"><span class="variable">$admin</span>-&gt;assignRole(<span class="string">&#x27;测试管理员&#x27;</span>);</span><br><span class="line"><span class="variable">$admin</span>-&gt;assignRole(<span class="string">&#x27;测试管理员&#x27;</span>,<span class="string">&#x27;测试管理员二号&#x27;</span>);</span><br><span class="line"><span class="variable">$admin</span>-&gt;assignRole([<span class="string">&#x27;测试管理员&#x27;</span>,<span class="string">&#x27;测试管理员二号&#x27;</span>]);</span><br><span class="line"><span class="comment">//给用户移除一个角色</span></span><br><span class="line"><span class="variable">$admin</span>-&gt;removeRole(<span class="string">&#x27;测试管理员二号&#x27;</span>);</span><br><span class="line"><span class="comment">//给用户同步角色</span></span><br><span class="line"><span class="variable">$admin</span>-&gt;syncRoles([<span class="string">&#x27;测试管理员&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//角色是否有权限</span></span><br><span class="line"><span class="variable">$role</span>-&gt;hasPermissionTo(<span class="string">&#x27;admin.index&#x27;</span>);</span><br><span class="line"><span class="comment">//用户是否有角色</span></span><br><span class="line"><span class="variable">$admin</span>-&gt;hasRole(<span class="string">&#x27;测试管理员&#x27;</span>);</span><br><span class="line"><span class="comment">//用户是否有以下任意一个角色</span></span><br><span class="line"><span class="variable">$admin</span>-&gt;hasAnyRole([<span class="string">&#x27;测试管理员&#x27;</span>,<span class="string">&#x27;测试管理员二号&#x27;</span>]);</span><br><span class="line"><span class="comment">//用户是否有以下所有角色</span></span><br><span class="line"><span class="variable">$admin</span>-&gt;hasAllRoles([<span class="string">&#x27;测试管理员&#x27;</span>,<span class="string">&#x27;测试管理员二号&#x27;</span>]);</span><br><span class="line"><span class="comment">//用户是否有权限</span></span><br><span class="line"><span class="variable">$admin</span>-&gt;hasPermissionTo(<span class="string">&#x27;admin.index&#x27;</span>);</span><br><span class="line"><span class="variable">$admin</span>-&gt;hasPermissionTo(<span class="number">1</span>);<span class="comment">//直接传权限的id也可以</span></span><br><span class="line"><span class="comment">//用户是否有以下任意一个权限</span></span><br><span class="line"><span class="variable">$admin</span>-&gt;hasAnyPermission([<span class="string">&#x27;admin.index&#x27;</span>,<span class="string">&#x27;admin.update&#x27;</span>]);</span><br><span class="line"><span class="comment">//用户是否有以下所有权限</span></span><br><span class="line"><span class="variable">$admin</span>-&gt;hasAllPermissions([<span class="string">&#x27;admin.index&#x27;</span>,<span class="string">&#x27;admin.update&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取用户的所有权限</span></span><br><span class="line"><span class="variable">$permissions</span> = <span class="variable">$user</span>-&gt;getAllPermissions();</span><br><span class="line"><span class="comment">//获取用户被直接分配的权限</span></span><br><span class="line"><span class="variable">$permissions</span> = <span class="variable">$user</span>-&gt;getDirectPermissions();</span><br><span class="line"><span class="comment">//获取用户通过角色分配的权限</span></span><br><span class="line"><span class="variable">$permissions</span> = <span class="variable">$user</span>-&gt;getPermissionsViaRoles();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取用户所有角色名称</span></span><br><span class="line"><span class="variable">$roles</span> = <span class="variable">$user</span>-&gt;getRoleNames(); <span class="comment">// 返回一个collection</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>ok,先这么多</p><blockquote><p>我这边直接给项目的原中间件修改了一下,当然也可以用他提供的中间件<code>RoleMiddleware</code>,<code>PermissionMiddleware</code>,<code>RoleOrPermissionMiddleware</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021 </tag>
            
            <tag> laravel </tag>
            
            <tag> laravel-permission </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用jwt在laravel中实现api的登录授权</title>
      <link href="2021/05/26/jwt/"/>
      <url>2021/05/26/jwt/</url>
      
        <content type="html"><![CDATA[<blockquote><p>emmmmm,发现一个问题;如果jwt过期时间设为2小时,则为绝对意义上的2小时,而不是用户无操作之后的2小时,这是为了保证token的安全,防止token被窃取后,一直使用,永远不过期。所以要用 <code>JWTAuth::parseToken()-&gt;refresh()</code> 刷新token,返回给前端;<br>当然也可以<a href="#%E8%AE%BE%E7%BD%AE%E6%97%A0%E8%BF%87%E6%9C%9F%E6%97%B6%E9%97%B4">设置无过期时间</a></p></blockquote><h1 id="jwt简单了解"><a href="#jwt简单了解" class="headerlink" title="jwt简单了解"></a>jwt简单了解</h1><p>jwt全称json web token，是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准（(RFC 7519)。特别适用于分布式站点的单点登录（SSO）场景。</p><h2 id="jwt认证流程"><a href="#jwt认证流程" class="headerlink" title="jwt认证流程"></a>jwt认证流程</h2><ol><li>客户端表单提交用户认证信息发送到服务端</li><li>服务端验证用户信息，生成jwt（包括header，payload，signature），jwt的组成后面再具体研究</li><li>服务端返回token给客户端</li><li>客户端存储token，并在后续每次请求服务端时在Http请求的header中的Authorization中上送token，（也可不放在header中，但建议在header中上送，保证安全）</li><li>服务端收到请求，验证jwt，然后处理业务逻辑返回结果</li></ol><h2 id="jwt认证与session认证的优势"><a href="#jwt认证与session认证的优势" class="headerlink" title="jwt认证与session认证的优势"></a>jwt认证与session认证的优势</h2><ol><li>用户认证后会存储用户认证记录在session中，而session通常保存在内存中，这就导致随用户增多，内存使用也会逐步增加。jwt则不存在内存问题。</li><li>session认证的方式，认证记录存储在服务器的内存中，这就导致分布式应用中，其他服务器上无法获取认证记录。</li></ol><h1 id="在laravel中具体使用"><a href="#在laravel中具体使用" class="headerlink" title="在laravel中具体使用"></a>在laravel中具体使用</h1><h2 id="安装composer包"><a href="#安装composer包" class="headerlink" title="安装composer包"></a>安装composer包</h2><p><code>composer require tymon/jwt-auth</code></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="生成配置文件-config-jwt-php"><a href="#生成配置文件-config-jwt-php" class="headerlink" title="生成配置文件 config/jwt.php"></a>生成配置文件 config/jwt.php</h3><p><code>php artisan vendor:publish --provider=&quot;Tymon\JWTAuth\Providers\LaravelServiceProvider&quot;</code></p><h3 id="生成加密秘钥-会在env中添加一个JWT-SECRET配置项"><a href="#生成加密秘钥-会在env中添加一个JWT-SECRET配置项" class="headerlink" title="生成加密秘钥(会在env中添加一个JWT_SECRET配置项)"></a>生成加密秘钥(会在env中添加一个JWT_SECRET配置项)</h3><p><code>php artisan jwt:secret</code></p><h3 id="更换laravel的auth配置"><a href="#更换laravel的auth配置" class="headerlink" title="更换laravel的auth配置"></a>更换laravel的auth配置</h3><p>编辑 项目根目录/config/auth.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这边项目为纯api,否则可不修改默认的guard</span></span><br><span class="line"><span class="string">&#x27;defaults&#x27;</span> =&gt; [</span><br><span class="line">    <span class="string">&#x27;guard&#x27;</span> =&gt; <span class="string">&#x27;jwt&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;passwords&#x27;</span> =&gt; <span class="string">&#x27;users&#x27;</span>,</span><br><span class="line">],</span><br><span class="line">...</span><br><span class="line"><span class="string">&#x27;guards&#x27;</span> =&gt; [</span><br><span class="line">    <span class="string">&#x27;web&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;driver&#x27;</span> =&gt; <span class="string">&#x27;session&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;provider&#x27;</span> =&gt; <span class="string">&#x27;users&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;api&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;driver&#x27;</span> =&gt; <span class="string">&#x27;token&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;provider&#x27;</span> =&gt; <span class="string">&#x27;users&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;hash&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">//这边新增了一个guard,也可直接修改原有的web及api,修改driver为jwt即可</span></span><br><span class="line">    <span class="string">&#x27;jwt&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;driver&#x27;</span> =&gt; <span class="string">&#x27;jwt&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;provider&#x27;</span> =&gt; <span class="string">&#x27;users&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;hash&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">    ],</span><br><span class="line">],</span><br><span class="line">...</span><br><span class="line"><span class="comment">//这边修改了默认的登录用户模型,如果使用原始的User,则不需改动</span></span><br><span class="line"><span class="string">&#x27;providers&#x27;</span> =&gt; [</span><br><span class="line">    <span class="string">&#x27;users&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;driver&#x27;</span> =&gt; <span class="string">&#x27;eloquent&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;model&#x27;</span> =&gt; App\Models\Admin::class,</span><br><span class="line">    ],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="修改用户模型"><a href="#修改用户模型" class="headerlink" title="修改用户模型"></a>修改用户模型</h3><blockquote><p>继承JWTSubject类并实现getJWTIdentifier及getJWTCustomClaims方法</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Factories</span>\<span class="title">HasFactory</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">SoftDeletes</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Auth</span>\<span class="title">User</span> <span class="title">as</span> <span class="title">Authenticatable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Notifications</span>\<span class="title">Notifiable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Spatie</span>\<span class="title">Permission</span>\<span class="title">Traits</span>\<span class="title">HasRoles</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Tymon</span>\<span class="title">JWTAuth</span>\<span class="title">Contracts</span>\<span class="title">JWTSubject</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//此处需继承JWTSubject类,并实现getJWTIdentifier及getJWTCustomClaims两个方法,如下</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Admin</span> <span class="keyword">extends</span> <span class="title">Authenticatable</span> <span class="keyword">implements</span> <span class="title">JWTSubject</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">HasFactory</span>, <span class="title">Notifiable</span>,<span class="title">HasRoles</span>,<span class="title">SoftDeletes</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$table</span> = <span class="string">&#x27;admins&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The attributes that are mass assignable.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$fillable</span> = [</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;phone&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;email&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;is_super&#x27;</span></span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The attributes that should be hidden for arrays.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$hidden</span> = [</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;remember_token&#x27;</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The attributes that should be cast to native types.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$casts</span> = [</span><br><span class="line">        <span class="string">&#x27;email_verified_at&#x27;</span> =&gt; <span class="string">&#x27;datetime&#x27;</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Rest omitted for brevity</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the identifier that will be stored in the subject claim of the JWT.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getJWTIdentifier</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;getKey();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return a key value array, containing any custom claims to be added to the JWT.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getJWTCustomClaims</span>(<span class="params"></span>): <span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注册facade"><a href="#注册facade" class="headerlink" title="注册facade"></a>注册facade</h3><blockquote><p>不注册也行,直接是用auth()函数也是可以的</p></blockquote><p>编辑 项目根目录/config/app.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="string">&#x27;aliases&#x27;</span> =&gt; [</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&#x27;JWTAuth&#x27;</span> =&gt; Tymon\JWTAuth\Facades\JWTAuth::class,</span><br><span class="line">    <span class="string">&#x27;JWTFactory&#x27;</span> =&gt; Tymon\JWTAuth\Facades\JWTFactory::class,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h2 id="逻辑实现"><a href="#逻辑实现" class="headerlink" title="逻辑实现"></a>逻辑实现</h2><h3 id="注册中间件"><a href="#注册中间件" class="headerlink" title="注册中间件"></a>注册中间件</h3><blockquote><p>这边项目需要,基于官方的中间件重写了一个,如无特殊需要可不注册,直接使用官方的jwt.auth中间件</p></blockquote><p>项目根目录/app/Http/Kernel.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="variable">$routeMiddleware</span> = [</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&#x27;api.auth&#x27;</span> =&gt; \App\Http\Middleware\ApiAuth::class,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h3 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::namespace(<span class="string">&#x27;Auth&#x27;</span>)-&gt;post(<span class="string">&#x27;register&#x27;</span>, <span class="string">&#x27;AuthController@register&#x27;</span>)-&gt;name(<span class="string">&#x27;erp.register&#x27;</span>);</span><br><span class="line">Route::namespace(<span class="string">&#x27;Auth&#x27;</span>)-&gt;post(<span class="string">&#x27;login&#x27;</span>, <span class="string">&#x27;AuthController@login&#x27;</span>)-&gt;name(<span class="string">&#x27;erp.login&#x27;</span>);</span><br><span class="line">Route::namespace(<span class="string">&#x27;Auth&#x27;</span>)-&gt;middleware(<span class="string">&#x27;api.auth&#x27;</span>)-&gt;post(<span class="string">&#x27;logout&#x27;</span>, <span class="string">&#x27;AuthController@logout&#x27;</span>)-&gt;name(<span class="string">&#x27;erp.logout&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="中间件代码"><a href="#中间件代码" class="headerlink" title="中间件代码"></a>中间件代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Middleware</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Exceptions</span>\<span class="title">Erp</span>\<span class="title">PermissionForbiddenException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Exceptions</span>\<span class="title">Erp</span>\<span class="title">RouteNotFoundException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Exceptions</span>\<span class="title">Erp</span>\<span class="title">UnauthorizedException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">HttpKernel</span>\<span class="title">Exception</span>\<span class="title">UnauthorizedHttpException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Tymon</span>\<span class="title">JWTAuth</span>\<span class="title">Exceptions</span>\<span class="title">TokenBlacklistedException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Tymon</span>\<span class="title">JWTAuth</span>\<span class="title">Exceptions</span>\<span class="title">TokenExpiredException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Tymon</span>\<span class="title">JWTAuth</span>\<span class="title">Exceptions</span>\<span class="title">TokenInvalidException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Tymon</span>\<span class="title">JWTAuth</span>\<span class="title">Http</span>\<span class="title">Middleware</span>\<span class="title">BaseMiddleware</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ApiAuth</span> <span class="keyword">extends</span> <span class="title">BaseMiddleware</span>//继承<span class="title">jwt</span>的<span class="title">BaseMiddleware</span>,以使用他的方法</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> PermissionForbiddenException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> \Tymon\JWTAuth\Exceptions\JWTException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RouteNotFoundException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"><span class="variable">$request</span>, \<span class="built_in">Closure</span> <span class="variable">$next</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 检查此次请求中是否带有 token，</span></span><br><span class="line"><span class="comment">             * 如果没有则抛出UnauthorizedHttpException异常。</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkForToken(<span class="variable">$request</span>);</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 检测用户的登录状态</span></span><br><span class="line"><span class="comment">             * 如果校验失败则抛出TokenInvalidException异常</span></span><br><span class="line"><span class="comment">             * 如果过期后刷新了新的token,传了旧token则抛出TokenBlacklistedException异常</span></span><br><span class="line"><span class="comment">             * 如果过期了,则抛出TokenExpiredException异常</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;auth-&gt;parseToken()-&gt;authenticate()) &#123;</span><br><span class="line">                <span class="comment">//todo 身份验证通过,具体实现其他业务逻辑</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UnauthorizedException(<span class="string">&#x27;未登录&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnauthorizedHttpException <span class="variable">$exception</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UnauthorizedException(<span class="string">&#x27;未获取到token&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (TokenExpiredException | TokenBlacklistedException <span class="variable">$exception</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UnauthorizedException(<span class="string">&#x27;token令牌已失效,请重新登录&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (TokenInvalidException <span class="variable">$exception</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UnauthorizedException(<span class="string">&#x27;无效的token&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="控制器代码"><a href="#控制器代码" class="headerlink" title="控制器代码"></a>控制器代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">Api</span>\<span class="title">Auth</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Exceptions</span>\<span class="title">Erp</span>\<span class="title">InvalidArgumentException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Exceptions</span>\<span class="title">Erp</span>\<span class="title">RepeatException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Exceptions</span>\<span class="title">Erp</span>\<span class="title">ServiceException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">Admin</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Validation</span>\<span class="title">ValidatesRequests</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Tymon</span>\<span class="title">JWTAuth</span>\<span class="title">Exceptions</span>\<span class="title">JWTException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Tymon</span>\<span class="title">JWTAuth</span>\<span class="title">Facades</span>\<span class="title">JWTAuth</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Validator</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">ValidatesRequests</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Request $request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> \Illuminate\Validation\ValidationException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RepeatException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span>(<span class="params">Request <span class="variable">$request</span></span>): <span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="variable">$request</span>-&gt;all();</span><br><span class="line">        <span class="variable">$validator</span> = Validator::make(<span class="variable">$data</span>, [</span><br><span class="line">            <span class="string">&#x27;phone&#x27;</span> =&gt; <span class="string">&#x27;required&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;required|max:64&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;required|max:64&#x27;</span>,</span><br><span class="line">        ], [</span><br><span class="line">            <span class="string">&#x27;phone.required&#x27;</span> =&gt; <span class="string">&#x27;手机号必填&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;phone.digits&#x27;</span> =&gt; <span class="string">&#x27;手机号格式错误&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;name.required&#x27;</span> =&gt; <span class="string">&#x27;用户名必填&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;name.max&#x27;</span> =&gt; <span class="string">&#x27;用户名长度超限&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password.required&#x27;</span> =&gt; <span class="string">&#x27;密码必填&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password.max&#x27;</span> =&gt; <span class="string">&#x27;密码长度超限&#x27;</span>,</span><br><span class="line">        ]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$validator</span>-&gt;fails()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">InvalidArgumentException</span>(<span class="variable">$validator</span>-&gt;errors()-&gt;messages());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="variable">$admin</span> = Admin::query()-&gt;create([</span><br><span class="line">                <span class="string">&#x27;phone&#x27;</span> =&gt; <span class="variable">$data</span>[<span class="string">&#x27;phone&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;name&#x27;</span> =&gt; <span class="variable">$data</span>[<span class="string">&#x27;name&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;password&#x27;</span> =&gt; bcrypt(<span class="variable">$data</span>[<span class="string">&#x27;password&#x27;</span>])</span><br><span class="line">            ]);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (\<span class="built_in">Exception</span> <span class="variable">$exception</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RepeatException(<span class="string">&#x27;手机号已注册,请直接登录&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$token</span> = JWTAuth::fromUser(<span class="variable">$admin</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">&#x27;token&#x27;</span> =&gt; <span class="variable">$token</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Request $request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ServiceException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> \Illuminate\Validation\ValidationException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params">Request <span class="variable">$request</span></span>): <span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="variable">$request</span>-&gt;all();</span><br><span class="line">        <span class="variable">$validator</span> = Validator::make(<span class="variable">$data</span>, [</span><br><span class="line">            <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;required&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;required|max:64&#x27;</span>,</span><br><span class="line">        ], [</span><br><span class="line">            <span class="string">&#x27;name.required&#x27;</span> =&gt; <span class="string">&#x27;用户名必填&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password.required&#x27;</span> =&gt; <span class="string">&#x27;密码必填&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password.max&#x27;</span> =&gt; <span class="string">&#x27;密码长度超限&#x27;</span>,</span><br><span class="line">        ]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$validator</span>-&gt;fails()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">InvalidArgumentException</span>(<span class="variable">$validator</span>-&gt;errors()-&gt;messages());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$credentials</span> = <span class="variable">$request</span>-&gt;only(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;password&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (! <span class="variable">$token</span> = JWTAuth::attempt(<span class="variable">$credentials</span>)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">InvalidArgumentException</span>(<span class="string">&#x27;用户名或者密码错误&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JWTException <span class="variable">$e</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(<span class="string">&#x27;token 无法生成&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">&#x27;token&#x27;</span> =&gt; <span class="variable">$token</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">logout</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        JWTAuth::setToken(JWTAuth::getToken())-&gt;invalidate();</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="设置无过期时间"><a href="#设置无过期时间" class="headerlink" title="设置无过期时间"></a><a id="设置无过期时间">设置无过期时间</a></h3><p>编辑 项目根目录/config/jwt.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置为null,或者设置env变量</span></span><br><span class="line"><span class="string">&#x27;ttl&#x27;</span> =&gt; env(<span class="string">&#x27;JWT_TTL&#x27;</span>, <span class="literal">null</span>),</span><br><span class="line">...</span><br><span class="line">    <span class="string">&#x27;required_claims&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;iss&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;iat&#x27;</span>,</span><br><span class="line">        <span class="comment">//&#x27;exp&#x27;,//注释掉exp,否则token生成是会将过期时间一起加进去,但是null过期时候会使token生成失败</span></span><br><span class="line">        <span class="string">&#x27;nbf&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sub&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;jti&#x27;</span>,</span><br><span class="line">    ],</span><br></pre></td></tr></table></figure><h1 id="完事-测试一下"><a href="#完事-测试一下" class="headerlink" title="完事,测试一下"></a>完事,测试一下</h1><p>给整个postman组添加统一的authorization里的token变量</p><p><img src="/images/16220968473522.jpg" alt="-w571"></p><p><img src="/images/16220967381821.jpg" alt="-w993"><br><img src="/images/16220967715985.jpg" alt="-w1000"><br><img src="/images/16220968118863.jpg" alt="-w1005"></p><p>退出后再退出测试一下中间键<br><img src="/images/16220969071886.jpg" alt="-w1021"></p><p>完事,撤<br><img src="/images/16220969707137.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021 </tag>
            
            <tag> 代码 </tag>
            
            <tag> laravel </tag>
            
            <tag> jwt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis整理（一）</title>
      <link href="2021/04/16/redis/"/>
      <url>2021/04/16/redis/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近一直在面试，发现redis的知识还是太薄弱了，慢慢梳理一下。</p></blockquote><h1 id="redis为何物"><a href="#redis为何物" class="headerlink" title="redis为何物"></a>redis为何物</h1><p>redis是基于内存的可持久化的key-value型数据库。</p><h1 id="redis的优点"><a href="#redis的优点" class="headerlink" title="redis的优点"></a>redis的优点</h1><ul><li>读写速度快</li><li>支持持久化（AOF，RDB两种方式）</li><li>支持事务</li><li>数据类型丰富（string，hash，set，zet，list）</li><li>支持主从，读写分离</li></ul><h1 id="redis的缺点"><a href="#redis的缺点" class="headerlink" title="redis的缺点"></a>redis的缺点</h1><h1 id="redis数据类型"><a href="#redis数据类型" class="headerlink" title="redis数据类型"></a>redis数据类型</h1><table><thead><tr><th>类型</th><th>数据类型</th></tr></thead><tbody><tr><td><a href="#string">string</a></td><td>字符串，整数，浮点型</td></tr><tr><td><a href="#hash">hash</a></td><td>有键值对的列表</td></tr><tr><td><a href="#set">set</a></td><td>字符串的无序集合，每个字符串都是唯一的</td></tr><tr><td><a href="#zet">zet</a></td><td>有序集合，由浮点key和字符串值组成</td></tr><tr><td><a href="#list">list</a></td><td>list链式表，每个节点上都一个值</td></tr></tbody></table><h2 id="string"><a href="#string" class="headerlink" title="string"></a><a id="string">string</a></h2><ol><li>获取值 <code>get key</code></li><li>设置值 <code>set key</code></li><li>删除值 <code>del key</code></li><li>自增 <code>incr key</code></li><li>按值自增 <code>incrby key</code></li></ol><p><img src="/images/16187382102057.jpg" alt="-w510"></p><h2 id="hash"><a href="#hash" class="headerlink" title="hash"></a><a id="hash">hash</a></h2><ol><li>设置值(可同时设置多个，空格分隔)<code>hset key field1 [field2]</code>返回入库条数</li><li>获取值<code>hget key field</code>，返回值</li><li>获取所有值<code>hgetall key</code>，返回所有键值</li><li>删除值(可同时删除过个)<code>hdel key field1 [field2]</code>，返回删除条数</li><li>删除整个hash<code>del</code>，返回删除的hash表数</li></ol><p><img src="/images/16187431843823.jpg" alt="-w600"></p><h2 id="set"><a href="#set" class="headerlink" title="set"></a><a id="set">set</a></h2><ol><li>向集合添加一个（多个成员）<code>sadd key field1 [field2]</code>,返回操作条数</li><li>获取集合的成员数 <code>scard key</code></li><li>获取第一个集合独有的元素，只传第一个参数则与库中所有的其他集合比较<code>sdiff key1 [key2]</code></li><li>获取第一个集合的交集，只传第一个集合则与库中所有的其他集合比较<code>sinter key1 [key2]</code></li><li>移除集合中的一个或多个元素 <code>srem key field1 [field2]</code></li></ol><p><img src="/images/16212344696690.jpg" alt="-w505"></p><h2 id="zet"><a href="#zet" class="headerlink" title="zet"></a><a id="zet">zet</a></h2><ol><li>向集合中添加元素 <code>zadd key index1 value1 [index2 value2]</code>,返回新增的元素数，不包括被更新的元素</li><li>获取集合中的元素数 <code>zcard key</code></li><li>获取集合中在指定区间中的元素数 <code>zcount key min max</code></li><li>移除集合中的一个或多个元素 <code>zrem key value1 [value2]</code><br><img src="/images/16212394834115.jpg" alt="-w387"></li></ol><h2 id="list"><a href="#list" class="headerlink" title="list"></a><a id="list">list</a></h2><ol><li>将一个或多个元素插入列表头 <code>lpush key value1 [value2]</code>,返回列表长度</li><li>将一个或多个元素插入列表尾 <code>rpush key value1 [value2]</code>,返回列表长度</li><li>从头部移除并获取一个元素 <code>lpop key</code>，返回元素值，不存在返回null</li><li>从尾部移除并获取一个元素 <code>rpop key</code>,返回元素值，不存在返回null<br><img src="/images/16212429789072.jpg" alt="-w379"></li></ol><h1 id="redis的持久化"><a href="#redis的持久化" class="headerlink" title="redis的持久化"></a>redis的持久化</h1><h2 id="两种持久化类型"><a href="#两种持久化类型" class="headerlink" title="两种持久化类型"></a>两种持久化类型</h2><ol><li>全量的RDB持久化<br> 指定时间间隔内，fork一个子进程，将数据写入临时文件，最后一次性替换之前的文件</li><li>增量的AOF持久化<br> 以文本的日志形式，记录每一个写、删除操作</li></ol><h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><h3 id="RDB优点"><a href="#RDB优点" class="headerlink" title="RDB优点"></a>RDB优点</h3><ol><li>备份频率和周期可以灵活自定义</li><li>可以保持redis的高性能，不影响redis读写</li><li>恢复快</li></ol><h3 id="RDB缺点"><a href="#RDB缺点" class="headerlink" title="RDB缺点"></a>RDB缺点</h3><ol><li>无法保证数据的高可用性</li><li>数据较大时，子进程可能会使服务停止几百毫秒甚至1秒</li></ol><h3 id="AOF优点"><a href="#AOF优点" class="headerlink" title="AOF优点"></a>AOF优点</h3><ol><li>有更高的数据可用性</li><li>宕机不会破坏已存储的日志内容</li><li>有一个可读的日志文件</li></ol><h3 id="AOF缺点"><a href="#AOF缺点" class="headerlink" title="AOF缺点"></a>AOF缺点</h3><ol><li>恢复速度比RDB慢</li><li>运行效率往往比RDB慢</li></ol><h2 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h2><p>当使用bgsave全量持久化时，选择AOF来进行增量的持久化。<br>在对数据要求没有那么严格时，推荐RDB持久化，恢复速度更快</p><h1 id="如何使用redis实现消息队列"><a href="#如何使用redis实现消息队列" class="headerlink" title="如何使用redis实现消息队列"></a>如何使用redis实现消息队列</h1><p>Redis 的 list(列表) 数据结构常用来作为异步消息队列使用，使用rpush/lpush操作入队列，使用lpop 和 rpop来出队列。rpush 和 lpop 结合 或者lpush 和rpop 结合。</p><p>客户端是通过队列的 pop 操作来获取消息，然后进行处理。处理完了再接着获取消息，再进行处理。如此循环往复，这便是作为队列消费者的客户端的生命周期。</p><h1 id="hash表的使用场景"><a href="#hash表的使用场景" class="headerlink" title="hash表的使用场景"></a>hash表的使用场景</h1><blockquote><p>添加一个雲放同学提供的hash使用场景</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#购物车</span><br><span class="line"></span><br><span class="line">#用户1001添加1件10091商品</span><br><span class="line">hset cart:1001 10091 1 </span><br><span class="line"></span><br><span class="line">#用户1001添加2件10021商品</span><br><span class="line">hset cart:1001 10021 2 </span><br><span class="line"></span><br><span class="line">#用户1001增加1件10091商品</span><br><span class="line">hincrby cart:1001 10091 1 </span><br><span class="line"></span><br><span class="line">#获取用户1001的购物车商品总数</span><br><span class="line">hlen cart:1001 </span><br><span class="line"></span><br><span class="line">#删除用户1001的商品10091</span><br><span class="line">hdel cart:1001 10091 </span><br><span class="line"></span><br><span class="line">#查看用户1001的购物车</span><br><span class="line">hgetall cart:1001</span><br><span class="line"></span><br><span class="line">#清空用户1001的购物车</span><br><span class="line">del cart:1001</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021 </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的键盘他不只是个键盘</title>
      <link href="2021/04/09/keycap/"/>
      <url>2021/04/09/keycap/</url>
      
        <content type="html"><![CDATA[<p>你以为我的键盘只是一个键盘？No！他还是一个留言簿，它在可见的未来将承载并记录我的一步步旅程；</p><p>告别了过去的三年，我没有挥一挥衣袖，不带走一片云彩，我，带走了小伙伴们教给我的无数知识和。。。。。emmm。。。。他们的的键帽（手动狗头），哈哈哈哈；</p><p>若干月之前，偶然和测试阿斌哥互换了一个F5的键帽。再后来斌哥去往了更宽广的舞台，键帽就这样保留了下来。直到今天再添一员大将。</p><p>感谢<a href="https://www.m-finder.com/">雲放同学</a>的page down，也感谢斌哥的F5，感谢你们的键帽，让我的键盘不再只是个键盘。<br><img src="/images/64141617979838_.pic_hd.jpg" alt="64141617979838_.pic_hd"></p><p>大家以后都要加油啊，你们都棒棒哒。<br><img src="/images/16176745414714.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 碎碎念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Fatal:Not a gitflow-enabled repo yet. Please run &#39;git flow init&#39; first</title>
      <link href="2021/04/08/git-error/"/>
      <url>2021/04/08/git-error/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今天sourcetree操作git，报错Fatal: Not a gitflow-enabled repo yet. Please run ‘git flow。记录一下解决方案。</p></blockquote><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题<img src="/images/251617846939_.pic.jpg" alt="251617846939_.pic"></h3><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><h4 id="打开项目下的-git-config文件，并删除所有gitflow的配置"><a href="#打开项目下的-git-config文件，并删除所有gitflow的配置" class="headerlink" title="打开项目下的.git/config文件，并删除所有gitflow的配置"></a>打开项目下的.git/config文件，并删除所有gitflow的配置</h4><p><img src="/images/16178492522634.jpg"></p><h4 id="删除后保存config，并重启sourcetree，重新点击git工作流-gt-初始化仓库"><a href="#删除后保存config，并重启sourcetree，重新点击git工作流-gt-初始化仓库" class="headerlink" title="删除后保存config，并重启sourcetree，重新点击git工作流=&gt;初始化仓库"></a>删除后保存config，并重启sourcetree，重新点击git工作流=&gt;初始化仓库<img src="/images/261617847178_.pic_hd.jpg" alt="261617847178_.pic_hd"></h4><h4 id="重新执行之前报错的git操作，不再报错"><a href="#重新执行之前报错的git操作，不再报错" class="headerlink" title="重新执行之前报错的git操作，不再报错"></a>重新执行之前报错的git操作，不再报错</h4>]]></content>
      
      
      <categories>
          
          <category> error </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用pdf.js展示pdf及展示电子签章</title>
      <link href="2021/04/01/pdf_js/"/>
      <url>2021/04/01/pdf_js/</url>
      
        <content type="html"><![CDATA[<blockquote><p>项目中之前的小伙伴用的pdfh5.js,用起来有些许bug,于是乎准备使用pdf.js代替之</p></blockquote><h3 id="js下载"><a href="#js下载" class="headerlink" title="js下载"></a>js下载</h3><p>点击<a href="http://mozilla.github.io/pdf.js/getting_started/#download">pdf.js官网</a>下载，本次使用的为 v2.7.570<br>下载后保持结构不变移植到项目中<br><img src="/images/1617330465291.jpg" alt="1617330465291"></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><blockquote><p>本次使用iframe用法，其他用法略复杂，等以后再研究</p></blockquote><p>在需要展示pdf的地方引用一下代码即可，官方已经封装好用法，即web目录下的viewer.html,在之后跟踪file参数接pdf地址即可，示例如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;js/plugins/pdfjs/web/viewer.html&#x27;?file=http://tax-manage.test/storage/contract/test.pdf&#x27;)&#125;&#125;&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;800px&quot;</span> <span class="attr">id</span>=<span class="string">&quot;iframe&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图<br><img src="/images/16173310594409.jpg"></p><h3 id="签章展示"><a href="#签章展示" class="headerlink" title="签章展示"></a>签章展示</h3><h4 id="签章报错"><a href="#签章报错" class="headerlink" title="签章报错"></a>签章报错</h4><p>然鹅，如上使用后pdf可展示了，but 电子签章不展示，打开控制台看到一个报错<br>util.js:366 Warning: Unimplemented widget field type “Sig”, falling back to base field type.<br><img src="/images/16173314778345.jpg"></p><h4 id="无效的解决方案"><a href="#无效的解决方案" class="headerlink" title="无效的解决方案"></a>无效的解决方案</h4><p>查了半天，都说注释掉<code>pdf.worker.js</code>里三行的代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// if (data.fieldType === &quot;Sig&quot;) &#123;</span></span><br><span class="line"><span class="comment">//   data.fieldValue = null;</span></span><br><span class="line"><span class="comment">//   this.setFlags(_util.AnnotationFlag.HIDDEN);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><p>然并卵</p><h4 id="真正解决"><a href="#真正解决" class="headerlink" title="真正解决"></a>真正解决</h4><p>最后在一位叫带甜味的盐的同学的文章（<a href="https://blog.csdn.net/s_y_w123/article/details/108869862">原文链接</a>）下找到答案<br>在<code>pdf.worker.js</code>中搜索下面一行<br><img src="/images/16173320819737.jpg"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">0</span>, _util.warn)(<span class="string">&#x27;Unimplemented widget field type &quot;&#x27;</span> + fieldType + <span class="string">&#x27;&quot;, &#x27;</span> + <span class="string">&quot;falling back to base field type.&quot;</span>);</span><br></pre></td></tr></table></figure><p>修改为以下<br><img src="/images/16173321213805.jpg"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(fieldType !== <span class="string">&quot;Sig&quot;</span>) &#123;</span><br><span class="line">    (<span class="number">0</span>, _util.warn)(<span class="string">&#x27;Unimplemented widget field type &quot;&#x27;</span> + fieldType + <span class="string">&#x27;&quot;, &#x27;</span> + <span class="string">&quot;falling back to base field type.&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> WidgetAnnotation(parameters);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体为啥修改，请戳上面原文查看</p><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p>乙方签章已展示，奶思</p><p><img src="/images/16173322941298.jpg"></p><blockquote><p>忍不住吐槽，现在搜个问题解决方案是真滴难，到处都是无脑cv的答案，毛用没有，难受</p></blockquote><p><img src="/images/16173330315869.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021 </tag>
            
            <tag> pdf.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php使用ZipArchive类,压缩文件</title>
      <link href="2021/03/25/zip_archive/"/>
      <url>2021/03/25/zip_archive/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今天工作中,需要从服务器打包个人的签约pdf文件回本地,从数据库拉出个人的身份证号码及对应的签约文件名,最后要实现将签约文件以身份证号命名,于是写了个小脚本拉一下;</p></blockquote><blockquote><p>保存身份证及文件名的对应关系文件如下</p></blockquote><p><img src="/images/1616984423889.jpg" alt="1616984423889"></p><h3 id="文件打包成zip"><a href="#文件打包成zip" class="headerlink" title="文件打包成zip"></a>文件打包成zip</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//身份证及文件名一一对应的条件存储文件</span></span><br><span class="line"><span class="variable">$txt_file</span> = <span class="string">&#x27;./condition.txt&#x27;</span>;</span><br><span class="line"><span class="comment">//最后打包的zip包名</span></span><br><span class="line"><span class="variable">$zip_name</span> = <span class="string">&#x27;./res.zip&#x27;</span>;</span><br><span class="line"><span class="comment">//签约文件存储地址</span></span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&#x27;/Volumes/PHP/tax-manage/public/downloads/&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$zip</span> = <span class="keyword">new</span> ZipArchive();</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * open方法第一个参数是压缩或解压的文件</span></span><br><span class="line"><span class="comment"> * open第二个参数,用ZipArchive::CREATE,若文件已存在,会继续添加,用ZipArchive::OVERWIRITE则会覆盖之前的zip包</span></span><br><span class="line"><span class="comment"> * 传ZipArchive::CREATE时,若zip包不存在会自动创建</span></span><br><span class="line"><span class="comment"> * 传ZipArchive::OVERWIRITE时,若zip包不存在,$zip-&gt;open会返回数字9,后续addFile会报错Invalid or uninitialized Zip object </span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"> <span class="keyword">if</span>(file_exists(<span class="variable">$zip_name</span>))&#123;</span><br><span class="line">    unlink(<span class="variable">$zip_name</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$zip</span>-&gt;open(<span class="variable">$zip_name</span>, ZipArchive::CREATE) == <span class="literal">TRUE</span>) &#123;</span><br><span class="line">    <span class="comment">//打开条件文件,读取身份证及签约文件名</span></span><br><span class="line">    <span class="variable">$file_handler</span> = fopen(<span class="variable">$txt_file</span>, <span class="string">&#x27;r&#x27;</span>);<span class="comment">//以可读方式打开文件</span></span><br><span class="line">    <span class="comment">//fgets读取行</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="variable">$data</span> = fgets(<span class="variable">$file_handler</span>)) &#123;</span><br><span class="line">        <span class="variable">$arr</span> = explode(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$arr</span>[<span class="number">0</span>]).<span class="string">&#x27;.pdf&#x27;</span>;<span class="comment">//用身份证重命名</span></span><br><span class="line">        <span class="variable">$path</span> = <span class="variable">$dir</span>.trim(<span class="variable">$arr</span>[<span class="number">1</span>]);<span class="comment">//一定要trim,不然取出来的数据会有换行符</span></span><br><span class="line">        <span class="comment">//添加文件到zip包中,第二个参数传入用于重命名</span></span><br><span class="line">        <span class="variable">$zip</span>-&gt;addFile(<span class="variable">$path</span>.<span class="variable">$arr</span>[<span class="number">1</span>], <span class="variable">$file_name</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$zip</span>-&gt;close();</span><br><span class="line">    fclose(<span class="variable">$file_handler</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;finish&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="记一个bug，心酸"><a href="#记一个bug，心酸" class="headerlink" title="记一个bug，心酸"></a>记一个bug，心酸</h5><blockquote><p>第一次写完后,<code>fgets()</code>方法取出一行数据后,用<code>explode()</code>方法分割数据,得到的文件路径是带了换行符<code>\n</code>的,但是这茬给忽略了,导致所有数据只有最后一行处理成功,因为没有换行;太菜了,哈哈哈哈;还以为是后面的覆盖了前面的文件呢,跟旁边的小伙伴想了半天还,最后还是小伙伴发现了这个,给自己一巴掌;(痛苦面具);特此记录一次,再忘记剁手(捂脸)</p></blockquote><blockquote><p>如果ZipArchive类的addFile方法返回false,不要怀疑就是文件不存在或者路径不对,不要质疑(捂脸)</p></blockquote><h3 id="解压缩zip包"><a href="#解压缩zip包" class="headerlink" title="解压缩zip包"></a>解压缩zip包</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$zip</span> = <span class="keyword">new</span> ZipArchive();</span><br><span class="line"><span class="comment">//解压,open方法不需要传第二个参数</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$zip</span>-&gt;open(<span class="string">&#x27;res.zip&#x27;</span>) === <span class="literal">TRUE</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//将res.zip的内容解压到res文件夹中</span></span><br><span class="line">    <span class="variable">$zip</span>-&gt;extractTo(<span class="string">&#x27;res&#x27;</span>);</span><br><span class="line">    <span class="variable">$zip</span>-&gt;close();<span class="comment">//关闭处理的zip文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
          <category> bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过hexo+github+trvis-ci搭建个人博客</title>
      <link href="2021/03/18/blog/"/>
      <url>2021/03/18/blog/</url>
      
        <content type="html"><![CDATA[<h2 id="github"><a href="#github" class="headerlink" title="github"></a>github</h2><h3 id="1-在github中新建仓库并命名为-github用户名-github-io的仓库"><a href="#1-在github中新建仓库并命名为-github用户名-github-io的仓库" class="headerlink" title="1. 在github中新建仓库并命名为  github用户名.github.io的仓库"></a>1. 在github中新建仓库并命名为  github用户名.github.io的仓库</h3><p><img src="https://i.loli.net/2021/03/26/Q1DoKuJkzL48s7S.jpg" alt="1"></p><h3 id="2-新增token"><a href="#2-新增token" class="headerlink" title="2.新增token"></a>2.新增token</h3><p><img src="https://i.loli.net/2021/03/26/Przm8NMSjgyO1Q9.jpg" alt="2"><br><img src="https://i.loli.net/2021/03/26/V2EOLmQd9o5puJ6.jpg" alt="3"><br><img src="https://i.loli.net/2021/03/26/LMAYFTIH26Baxhr.jpg" alt="4"></p><p>保存好生成的 token，后面用于配置 travis-ci</p><h3 id="3-新建一个hexo分支用于存储后面的项目（分支可以自定义，后面配置中保持一致即可）"><a href="#3-新建一个hexo分支用于存储后面的项目（分支可以自定义，后面配置中保持一致即可）" class="headerlink" title="3.新建一个hexo分支用于存储后面的项目（分支可以自定义，后面配置中保持一致即可）"></a>3.新建一个hexo分支用于存储后面的项目（分支可以自定义，后面配置中保持一致即可）</h3><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p>mac下载地址：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a><br>其他系统，请自行寻找，如不本地调试，node.js也可以不装</p><blockquote><p>node.js我使用的12.21.0版本,最新版的node.js在hexo构建后会报错</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(node:25044) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency</span><br><span class="line">(Use &#96;node --trace-warnings ...&#96; to show where the warning was created)</span><br><span class="line">(node:25044) Warning: Accessing non-existent property &#39;column&#39; of module exports inside circular dependency</span><br><span class="line">(node:25044) Warning: Accessing non-existent property &#39;filename&#39; of module exports inside circular dependency</span><br><span class="line">(node:25044) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency</span><br><span class="line">(node:25044) Warning: Accessing non-existent property &#39;column&#39; of module exports inside circular dependency</span><br><span class="line">(node:25044) Warning: Accessing non-existent property &#39;filename&#39; of module exports inside circular dependency</span><br></pre></td></tr></table></figure><h2 id="全局安装hexo"><a href="#全局安装hexo" class="headerlink" title="全局安装hexo"></a>全局安装hexo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#39;PATH&#x3D;&quot;$PATH:.&#x2F;node_modules&#x2F;.bin&quot;&#39; &gt;&gt; ~&#x2F;.profile</span><br></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init ashin33 </span><br><span class="line">$ cd ashin33</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>在指定目录下(上面为我的文件夹，请根据个人实际情况修改)生成hexo项目</p><h2 id="运行以下命令就可以预览你的博客了"><a href="#运行以下命令就可以预览你的博客了" class="headerlink" title="运行以下命令就可以预览你的博客了"></a>运行以下命令就可以预览你的博客了</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean ## 用于清除已构建的文件  </span><br><span class="line">hexo generate ##或者 hexo g  构建项目  </span><br><span class="line">hexo server ##或者 hexo s</span><br><span class="line">##也可以&#96;hexo s -g&#96; 一步更比两步强</span><br></pre></td></tr></table></figure><h2 id="安装hexo主题"><a href="#安装hexo主题" class="headerlink" title="安装hexo主题"></a>安装hexo主题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule add https:&#x2F;&#x2F;github.com&#x2F;jerryc127&#x2F;hexo-theme-butterfly.git themes&#x2F;butterfly</span><br></pre></td></tr></table></figure><ul><li>此处选择了butterfly主题，更多主题请移步 <a href="https://hexo.io/themes/">https://hexo.io/themes/</a></li><li>此处使用了git submodule 子模块加载命令，用于后续我们主项目推送时，将主题可以一起推到项目里，否则后面travis-ci自动构建会报错，找不到标签等错误</li></ul><h2 id="安装pug和stylus渲染器-用于渲染主题"><a href="#安装pug和stylus渲染器-用于渲染主题" class="headerlink" title="安装pug和stylus渲染器,用于渲染主题"></a>安装pug和stylus渲染器,用于渲染主题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h2 id="hexo博客发布与butterfly主题的具体使用，参考各自文档"><a href="#hexo博客发布与butterfly主题的具体使用，参考各自文档" class="headerlink" title="hexo博客发布与butterfly主题的具体使用，参考各自文档"></a>hexo博客发布与butterfly主题的具体使用，参考各自文档</h2><p>hexo文档：<a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a><br>butterfly文档：<a href="https://butterfly.js.org/posts/21cfbf15/">https://butterfly.js.org/posts/21cfbf15/</a></p><h2 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h2><p>修改项目根目录下的_config.yml文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: 神的孩子都在跳舞  </span><br><span class="line">subtitle: &#39;&#39;  </span><br><span class="line">description: 神的孩子都在跳舞  </span><br><span class="line">keywords:  </span><br><span class="line">author: Alon  </span><br><span class="line">language: zh-CN  </span><br><span class="line">timezone: Asia&#x2F;Shanghai  </span><br><span class="line">url: https:&#x2F;&#x2F;ashin33.github.io&#x2F;  ##github分配的静态页面地址</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/03/26/TrIVbHum86j1d5K.jpg" alt="5.jpg"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly  ##themes目录下的主题目录</span><br><span class="line">deploy:  </span><br><span class="line">type: git  </span><br><span class="line">repo: https:&#x2F;&#x2F;github.com&#x2F;ashin33&#x2F;ashin33.github.io.git  ##仓库地址</span><br><span class="line">branch: hexo  ##代码要推送的分支</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/03/26/cLE3u4IDjmJQreF.jpg" alt="6"></p><h2 id="butterfly配置"><a href="#butterfly配置" class="headerlink" title="butterfly配置"></a>butterfly配置</h2><ul><li>复制themes/butterfly下的_config.yml文件到项目根目录下并重命名为_config.butterfly.yml</li><li>hexo构建时会合并_config.yml和_config.butterfly.yml的配置</li><li>在此修改butterfly的配置，在后面更新主题是就不会影响配置了</li></ul><h2 id="配置travis-ci用于自动构建"><a href="#配置travis-ci用于自动构建" class="headerlink" title="配置travis-ci用于自动构建"></a>配置travis-ci用于自动构建</h2><ul><li> 不使用travis-ci手动构建也是可以的，可以直接使用<br><code>hexo deploy -g</code>  或者  <code>hexo d -g</code>,此命令会根据第9步中配置的deploy的参数直接构建并推送</li></ul><h3 id="1-在travis-ci官网用github账号登录-，并激活，如图"><a href="#1-在travis-ci官网用github账号登录-，并激活，如图" class="headerlink" title="1. 在travis-ci官网用github账号登录 ，并激活，如图"></a>1. 在<a href="https://travis-ci.com/">travis-ci官网</a>用github账号登录 ，并激活，如图</h3><p><img src="https://i.loli.net/2021/03/26/3k7ORZsuLyAXYGM.jpg" alt="7"><br><img src="https://i.loli.net/2021/03/26/mFqDLaOQPgoJTRZ.jpg" alt="8"></p><h3 id="2-进入travis-ci中的自己的项目中进入setting中，按下图进行设置"><a href="#2-进入travis-ci中的自己的项目中进入setting中，按下图进行设置" class="headerlink" title="2. 进入travis-ci中的自己的项目中进入setting中，按下图进行设置"></a>2. 进入travis-ci中的自己的项目中进入setting中，按下图进行设置</h3><p><img src="https://i.loli.net/2021/03/26/FPs3cCAg2hpndUE.jpg" alt="9"></p><p><img src="https://i.loli.net/2021/03/26/rAjgG3QofNq4PJb.jpg" alt="10"></p><h3 id="3-在项目根目录新增travis-ci的配置文件-travis-yml，并写入以下内容"><a href="#3-在项目根目录新增travis-ci的配置文件-travis-yml，并写入以下内容" class="headerlink" title="3.在项目根目录新增travis-ci的配置文件.travis.yml，并写入以下内容"></a>3.在项目根目录新增travis-ci的配置文件<code>.travis.yml</code>，并写入以下内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"># 指定语言环境</span><br><span class="line">language: node_js</span><br><span class="line"># 指定需要sudo权限</span><br><span class="line">sudo: required</span><br><span class="line"># 指定node_js版本,版本过低的话构建时travis会报错Uncaught SyntaxError: Unexpected token....</span><br><span class="line">node_js:</span><br><span class="line">  - 12.21.0</span><br><span class="line"># 指定缓存模块，可选。缓存可加快编译速度。</span><br><span class="line">cache:</span><br><span class="line">  directories:</span><br><span class="line">    - node_modules</span><br><span class="line"></span><br><span class="line"># 指定博客源码分支，因人而异。hexo博客源码托管在独立repo则不用设置此项</span><br><span class="line">branches:</span><br><span class="line">  only:</span><br><span class="line">    - hexo</span><br><span class="line"></span><br><span class="line">before_install:</span><br><span class="line">  - npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line"># Start: Build Lifecycle</span><br><span class="line">install:</span><br><span class="line">  - npm install</span><br><span class="line">  - npm install hexo-deployer-git --save</span><br><span class="line"># 执行清缓存，生成网页操作</span><br><span class="line">script:</span><br><span class="line">  - hexo clean</span><br><span class="line">  - hexo generate</span><br><span class="line"></span><br><span class="line"># user.name替换为自己的github用户名</span><br><span class="line"># user.email替换为自己的github邮箱</span><br><span class="line"># $&#123;travis_ci&#125;中的travis替换为自己github中的token名</span><br><span class="line"># 这样每次推送代码，travis会自动在master分支中构建hexo</span><br><span class="line">after_script:</span><br><span class="line">  - cd .&#x2F;public</span><br><span class="line">  - git init</span><br><span class="line">  - git config user.name &quot;ashin33&quot;</span><br><span class="line">  - git config user.email &quot;ashin_33@163.com&quot;</span><br><span class="line">  - git add .</span><br><span class="line">  - git commit -m &quot;Travis ci push&quot;</span><br><span class="line">  - git push --force --quiet &quot;https:&#x2F;&#x2F;$&#123;travis_ci&#125;@$&#123;gh_repo&#125;&quot; master:master</span><br><span class="line">env:</span><br><span class="line">  global:</span><br><span class="line">    - gh_repo: github.com&#x2F;ashin33&#x2F;ashin33.github.io.git</span><br><span class="line"># End: Build LifeCycle</span><br></pre></td></tr></table></figure><h3 id="5-推送干净的项目代码（hexo-clean过的项目代码）到hexo分支"><a href="#5-推送干净的项目代码（hexo-clean过的项目代码）到hexo分支" class="headerlink" title="5.推送干净的项目代码（hexo clean过的项目代码）到hexo分支"></a>5.推送干净的项目代码（hexo clean过的项目代码）到hexo分支</h3><h3 id="6-代码推送后，进入travis中可以看到构建过程，等待构建成功，访问https-ashin33-github-io-即可，网址中的ashin33-github-io替换为你的仓库名即可"><a href="#6-代码推送后，进入travis中可以看到构建过程，等待构建成功，访问https-ashin33-github-io-即可，网址中的ashin33-github-io替换为你的仓库名即可" class="headerlink" title="6.代码推送后，进入travis中可以看到构建过程，等待构建成功，访问https://ashin33.github.io 即可，网址中的ashin33.github.io替换为你的仓库名即可"></a>6.代码推送后，进入travis中可以看到构建过程，等待构建成功，访问<a href="https://ashin33.github.io/">https://ashin33.github.io</a> 即可，网址中的ashin33.github.io替换为你的仓库名即可</h3>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021</title>
      <link href="2021/01/01/2021/"/>
      <url>2021/01/01/2021/</url>
      
        <content type="html"><![CDATA[<h1 id="2021年了-一起加油呀"><a href="#2021年了-一起加油呀" class="headerlink" title="2021年了 一起加油呀"></a>2021年了 一起加油呀</h1><p><img src="/images/16176745414714.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 碎碎念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
